#===============================================================
# simple dir history for bash/ksh/zsh:
#   . ./cdhist
# aliases cd to cdpush:
#   cd <dir> : change dir and push directory to CDHISTORYFILE
#   cd -- [-a] [<pat> ...] : display/choose in dir history
#     -a    : all dir history (CDNBDIRS without -a)
#     <pat> : grep pattern to search in history
#             if unique dir found, cd to dir
#             multiple pattern will grep <pat>.*<pat>...
#   `cd --` can be replaced by `cdd` command
#
# environment vars:
#   CDHISTORYFILE : default to ~/.cd_history
#   CDNBDIRS      : default to 10 (nbdirs to display)
#
#================================================================
# reverse cat
type -p tac >/dev/null || alias tac='tail -r'
type -p builtin >/dev/null || alias builtin=command # ash

# change directory and remove/append PWD to CDHISTFILE
cdpush() {
  typeset cdhf=${CDHISTFILE:-~/.cd_history}
  [ "$1" = "--" ] && shift && { cdhist "$@"; return $?; }
  builtin cd "$@" || return $?
  touch $cdhf
  sed -i "\|^$PWD$|d" $cdhf
  echo "$PWD" >>$cdhf
}

# cdhist    : Display CDNBDIRS history
# cdhist -a : whole history
# cdhist [-a] <pattern> [<pat>...]: display dirs matching pattern/cd to dir if unique found
cdhist() {
  typeset gr=. nb=${CDNBDIRS:-10} dirs cdhf=${CDHISTFILE:-~/.cd_history} n
  [ "$1" = -a ] && nb=-1 && shift
  [ "$1" ] && gr=$(awk 'BEGIN{OFS=".*";for(i=1;i<ARGC;i++) $i=ARGV[i];print $0}' "$@")
  dirs=$(tac $cdhf |awk 'n == nb {exit} $0 == pwd {next} $0 ~ gr {n++;print $0}' gr="$gr" pwd="$PWD" nb=$nb)
  [ "$1" ] && [ $(echo "$dirs" |wc -l) = 1 ] && { cdpush "$dirs" ; return $?; }
  echo "$dirs" | grep --color=auto -n '.'
  printf "cd: "
  read n
  [[ $n = [1-9]* ]] || return
  cdpush "$(echo "$dirs" |sed -n "$n{p;q}")"
}

alias cd=cdpush
alias cdd=cdhist
