#===============================================================
# simple dir history for bash/ksh/zsh:
#   . ./cdhist
# aliases cd to cdpush:
#   cd <dir> : change dir and push directory to CDHISTORYFILE
#   cd -- [-a] [<pat> ...] : display/choose in dir history
#     -a    : all dir history (CDNBDIRS without -a)
#     <pat> : grep pattern to search in history
#             if unique dir found, cd to dir
#             multiple pattern will grep <pat>.*<pat>...
#   cd - [-a] <pat> [<pat>...] : search and cd to first dir matching 
#             <pat> in history
#   `cd --` can be replaced by `cdd` command
#
# environment vars:
#   CDHISTORYFILE : default to ~/.cd_history
#   CDNBDIRS      : default to 10 (nbdirs to display)
#
#================================================================
unalias cd 2>/dev/null
type local >/dev/null 2>/dev/null || alias local=typeset
type -p tac >/dev/null || alias tac='tail -r'
[ "$(uname -s)" = Darwin ] && cd_sed_opt="''" || cd_sed_opt=""
touch ${CDHISTFILE:=~/.cd_history}

cdpushf=$(cat - <<'EOF'
# change directory and remove/append PWD to CDHISTFILE
function cdpush {
    local cdhf=${CDHISTFILE:-~/.cd_history}
    [ "$1" = "--" ] && shift && { cdhist "$@"; return $?; }
    [ "$1" = "-" ] && [ "$2" ] && { cdhist "$@"; return $?; }
    [[ "$1" = ~* ]]  && set -- "$HOME${1#\~}"
    cd "$@" || return $?
    sed -i $cd_sed_opt "\|^$PWD$|d" $cdhf
    echo "$PWD" >>$cdhf
}
EOF
)
# need to declare func using eval for ksh unalias cd issue
eval "$cdpushf" 
unset cdpushf

# cdhist    : Display CDNBDIRS history
# cdhist -a : whole history
# cdhist [-a] <pattern> [<pat>...]: display dirs matching pattern/cd to dir if unique found
function cdhist {
    local gr=. nb=${CDNBDIRS:-10} dirs cdhf=${CDHISTFILE:-~/.cd_history} n first='' awk=awk
    [ "$1" = -a ] && nb=-1 && shift
    [ "$1" = - ] && first="exit" && shift
    [ -x /bin/nawk ] && awk=nawk
    [ "$1" ] && gr=$(awk 'BEGIN{OFS=".*";for(i=1;i<ARGC;i++) $i=ARGV[i];print}' "$@")
    dirs=$(tac $cdhf |$awk 'n == nb {exit} $0 == pwd {next} $0 ~ gr {n++;sub("^"hom,"~");print;'$first'}' gr="$gr" pwd="$PWD" nb=$nb hom=$HOME)
    while true
    do
        [ "$dirs" ] || return 1
        [[ "$dirs" != *$'\n'* ]] && { cdpush "$dirs" ; return $?; }
        echo "$dirs"| grep --color=auto -n ".*"
        printf "cd: "
        read n
        [ "$n" ] || break
        [[ $n = [1-9]* ]] && { cdpush "$(echo "$dirs" |awk NR==$n)"; return $?; }
        dirs=$(echo "$dirs" |egrep "$n")
    done
}

alias cd=cdpush
alias cdd=cdhist
